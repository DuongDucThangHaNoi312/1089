# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    google_recaptcha_site_key: '%env(GOOGLE_RECAPTCHA_SITE_KEY)%'
    bots: '%env(BOTS)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    _instanceof:
        Sonata\AdminBundle\Admin\AdminInterface:
            tags: [ sonata.admin ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: createPublicMenu, alias: publicMenu }
            - { name: knp_menu.menu_builder, method: createUserMenu, alias: userMenu }
            - { name: knp_menu.menu_builder, method: createCityUserMenu, alias: cityUserMenu }
            - { name: knp_menu.menu_builder, method: createCityUserJobMenu, alias: cityUserJobMenu }
            - { name: knp_menu.menu_builder, method: createCityUserJobAnnouncementMenu, alias: cityUserJobAnnouncementMenu }
            - { name: knp_menu.menu_builder, method: createCityUserResumeMenu, alias: cityUserResumeMenu }
            - { name: knp_menu.menu_builder, method: createCityUserJobTitleMenu, alias: cityUserJobTitleMenu }
            - { name: knp_menu.menu_builder, method: createCityUserAccountMenu, alias: cityUserAccountMenu }
            - { name: knp_menu.menu_builder, method: createJobSeekerMenu, alias: jobSeekerMenu }
            - { name: knp_menu.menu_builder, method: createJobSeekerAccountMenu, alias: jobSeekerAccountMenu }
            - { name: knp_menu.menu_builder, method: createFooterMenu, alias: footerMenu }
            - { name: knp_menu.menu_builder, method: createAboutCitiesMenu, alias: aboutCitiesMenu }
            - { name: knp_menu.menu_builder, method: createAboutUsMenu, alias: aboutUsMenu }
            - { name: knp_menu.menu_builder, method: createAboutJobAlertsMenu, alias: aboutJobAlertsMenu }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\LoginListener:
        arguments: ["@fos_user.user_manager.default","@router", "@security.authorization_checker", "@event_dispatcher", '@security.token_storage', '@doctrine.orm.entity_manager']
        tags:
            - {name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin}

    fos_user.security.controller:
        class: App\Controller\FosUser\SecurityController

    fos_user.listener.email_confirmation:
        class: App\EventListener\EmailConfirmationListener
        arguments:
            - "@fos_user.mailer"
            - "@fos_user.util.token_generator"
            - "@router"
            - "@session"
            - "@doctrine.orm.entity_manager"
        tags:
            - {name: kernel.event_subscriber}

#    App\EventListener\NotFoundExceptionListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.exception, method: onNotFoundExceptionThrown }

    App\EventListener\EmailConfirmationListener:
        alias: fos_user.listener.email_confirmation

    App\EventListener\PasswordResettingListener:
        arguments: ['@router', '@security.authorization_checker']
        tags:
            - {name: kernel.event_subscriber}

    App\EventListener\RemoveFileListener:
        arguments: ["@doctrine.orm.entity_manager"]
        tags:
            - { name: kernel.event_listener, event: vich_uploader.post_remove, method: onPostRemove }

    App\EventListener\JobAnnouncementStatusListener:
        tags:
            - { name: doctrine.event_listener, event: preUpdate }

    App\EventListener\CityRegistrationAdminEmailListener:
        arguments: ["@fos_user.mailer"]
        tags:
            - { name: doctrine.event_subscriber}

    App\EventListener\JobSeekerWelcomeEmailListener:
        arguments: ["@fos_user.mailer"]
        tags:
        - { name: doctrine.event_subscriber}

    App\EventListener\Stripe\StripeObjectMappingListener:
        arguments: ["@doctrine.orm.entity_manager"]
        tags:
            - { name: doctrine.event_listener, event: postPersist}
            - { name: doctrine.event_listener, event: postUpdate}
#            - { name: doctrine.event_listener, event: prePersist}

    App\EventListener\SubscriptionPaymentFailedListener:
        arguments: ["@fos_user.mailer", "@router" , "@doctrine.orm.entity_manager"]
        tags:
            - { name: doctrine.event_listener, event: postPersist}

    App\EventListener\SubscriptionCancelledListener:
        arguments: ["@doctrine.orm.entity_manager", "@app.subscription_manager"]
        tags:
            - { name: doctrine.event_listener, event: postUpdate}

    App\EventListener\SubscriptionRenewsListener:
        arguments: ["@doctrine.orm.entity_manager", "@app.subscription_manager"]
        tags:
            - { name: doctrine.event_listener, event: postUpdate}
            - { name: doctrine.event_listener, event: postPersist}

    App\EventListener\Stripe\StripeIdMappingListener:
        tags:
            - { name: doctrine.event_subscriber }

    city_upload.importer:
        class:     App\Service\CityUploadImporter
        arguments: [ "@session", "@doctrine.orm.entity_manager" ]

    app.admin.city_upload:
        arguments: [null, App\Entity\CityUpload, null, '@city_upload.importer' ]

    city_profile_upload.importer:
        class:     App\Service\CityProfileUploadImporter
        arguments: [ "@session", "@doctrine.orm.entity_manager" ]

    app.admin.city_profile_upload:
        arguments: [null, App\Entity\City\Importer\CityProfileUpload, null, '@city_profile_upload.importer' ]

    job_title_upload.importer:
        class:     App\Service\JobTitleUploadImporter
        arguments: [ "@session", "@doctrine.orm.entity_manager" ]

    app.admin.job_title_upload:
        arguments: [null, App\Entity\City\Importer\JobTitleUpload, null, '@job_title_upload.importer' ]


    App\Service\StripeSubscriptionProcessor:
        class: App\Service\StripeSubscriptionProcessor
        arguments: ["@miracode_stripe.model_manager"]
        public: true

    app.job_title.recommender:
        alias: App\Service\JobTitleML
        public: true

    app.subscription_stripe_processor:
        alias: App\Service\StripeSubscriptionProcessor
        public: true

    App\Service\CheckSubscriptionPlanChanges:
        class: App\Service\CheckSubscriptionPlanChanges
        arguments: ["@doctrine.orm.entity_manager", "@app.subscription_stripe_processor", '@session.flash_bag']

    App\Admin\CityAdmin:
        calls:
            - [addChild, ['@app.admin.department']]
            - [addChild, ['@app.admin.job_title']]

    App\Admin\City\DepartmentAdmin:
        calls:
            - [addChild, ['@app.admin.job_title']]

    App\Admin\City\JobTitleAdmin:
        class: App\Admin\City\JobTitleAdmin
        arguments: [~, ~, 'App\Controller\Admin\JobTitleAdminController']
        tags:
            - {name: 'sonata.admin', pager_type: 'simple'}
        calls:
            - [addChild, ['@app.admin.submitted_job_title_interest']]

    app.subscription_manager:
        alias: App\Service\SubscriptionManager
        public: true

    App\Service\UpdateFreeSubscriptions:
        class: App\Service\UpdateFreeSubscriptions
        arguments: ["@doctrine.orm.entity_manager", "@app.subscription_manager"]
        public: true

    App\Service\DowngradeSubscriptions:
        class: App\Service\DowngradeSubscriptions
        arguments: ["@doctrine.orm.entity_manager", "@app.subscription_manager", "@session.flash_bag"]
        public: true

    App\Admin\User\JobSeekerUser\SubscriptionAdmin:
        class: App\Admin\User\JobSeekerUser\SubscriptionAdmin
        arguments: ['app.admin.jobseeker.subscription', App\Entity\User\JobSeekerUser\Subscription, ~]
        tags:
            - {name: 'sonata.admin', label: 'Job Seeker Subscriptions'}

    App\Admin\City\SubscriptionAdmin:
        class: App\Admin\City\SubscriptionAdmin
        arguments: ['app.admin.city.subscription', App\Entity\City\Subscription, 'Sonata\AdminBundle\Controller\CRUDController']
        tags:
            - {name: 'sonata.admin', label: 'City Subscriptions'}

    app.annotation_listener:
        class: App\EventListener\AnnotationListener
        arguments: ['@annotation_reader', '@doctrine.orm.default_entity_manager']
        tags:
            - { name: kernel.event_listener, event: kernel.controller }

    App\Admin\JobAnnouncementAdmin:
        class: App\Admin\JobAnnouncementAdmin
        arguments:
            - ~
            - App\Entity\JobAnnouncement
            - App\Controller\JobAnnouncementApplicationUrlController
        tags:
              - {name: 'sonata.admin', label: 'Job Announcement'}

#    app.admin.article:
#        class: App\Admin\ArticleAdmin
#        arguments: [~, App\Entity\Article, ~]
#        tags:
#            - { name: sonata.admin, manager_type: orm, group: admin, label: Article }
#        public: true

    App\Admin\ViewAdmin:
        class: App\Admin\ViewAdmin
        arguments: ['app.admin.job_announcement_view', App\Entity\JobAnnouncement\View, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Job Announcement View' }
        public: true

    App\Admin\AlertedJobAnnouncementAdmin:
        class: App\Admin\AlertedJobAnnouncementAdmin
        arguments: [ 'app.admin.job_announcement_alerts', App\Entity\AlertedJobAnnouncement, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Job Announcement Alerts' }
        public: true

    App\Admin\JobAnnouncementImpressionAdmin:
        class: App\Admin\JobAnnouncementImpressionAdmin
        arguments: [ 'app.admin.job_announcement_impression', App\Entity\JobAnnouncement\JobAnnouncementImpression, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: 'Job Announcement Impression' }
        public: true
